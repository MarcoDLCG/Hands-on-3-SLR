package Gradiantes;
import jade.core.Agent;
import jade.core.behaviours.OneShotBehaviour;
public class Gradiante extends Agent {
    int n = 9;
    private double[] x = {23, 26, 30, 34, 43, 48, 52, 57, 58};
    private double[] y = {651, 762, 856, 1063, 1190, 1298, 1421, 1440, 1518};
    private double[] x2 = new double[n];
    private double[] xy = new double[n];
    private double[] yei = new double[3];
    private double[] ex = {62, 72, 82};
    private double sx, sy, sx2, sxy, sub0, sub1, sb0, sb1, e, b0, b1, b0n, b1n, t, m, a = 0.003;

    protected void setup() {
        System.out.println("Calculo de Regresion Lineal con Gradiante");
        addBehaviour(new MyOneShotBehaviour());
    }

    private class MyOneShotBehaviour extends OneShotBehaviour {
        public void action() {

            //Calcular Betas
            for (int i = 0; i < n; i++) {
                sx += x[i];
                sy += y[i];
                x2[i] = x[i] * x[i];
                xy[i] = x[i] * y[i];
            }
            for (int i = 0; i < n; i++) {
                sx2 += x2[i];
                sxy += xy[i];
            }
            b0 = (((sy * sx2) - (sx * sxy)) / ((n * sx2) - (sx * sx)));
            b1 = (((n * sxy) - (sx * sy)) / ((n * sx2) - (sx * sx)));

            //Calcular Y
            System.out.println("Digite el valor de x");
            for (int i = 0; i < 3; i++) {
                yei[i] = ex[i] * b1 + b0;
            }

            //Imprimir Datos
            System.out.println("Los valores de x y son: ");
            System.out.println("  X" + "   |   " + "Y");
            for (int i = 0; i < n; i++) {
                System.out.println(x[i] + "   |   " + y[i]);
            }
            System.out.println("Los valores de Beta0 son: " + b0);
            System.out.println("Los valores de Beta1 son: " + b1);
            System.out.println("Los valores de Y (y=b0+b1*x) calculados por X, B1 y B0 son: ");
            for (int i = 0; i < 3; i++) {
                System.out.println(yei[i] + "\t");
            }

            //Calculo del Gradiante
            System.out.println("\nCalculos del Gradiante");
            for (int i = 0; i < n; i++) {
                sub0 += (y[i] - (b0 + (b1 * x[i])));
                sub1 += x[0] * (y[i] - (b0 + (b1 * x[i])));
                e += Math.pow((y[i] - (b0 + (b1 * x[i]))), 2);
                b1n = b1 - (a * (-23 * x[i]));
            }
            sb0 = (-0.22 * sub0);
            sb1 = (-0.22 * sub1);
            b0n = b0 - (a * -1);

            System.out.println("Sumatoria de Beta 0 formula 1 " + String.format("%6.13e", sb0));
            System.out.println("Sumatoria de Beta 1 formula 1 " + String.format("%6.13e", sb1));
            System.out.println("Sumatoria del Error " + e);
            System.out.println("Valor de Beta 0 nueva " + b0n);
            System.out.println("Valor de Beta 1 nueva " + b1n);
            System.out.println();
    }
    public int onEnd() {
        myAgent.doDelete();
        return super.onEnd();
    }
    }
}
